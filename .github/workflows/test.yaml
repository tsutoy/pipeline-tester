name: Navbar CI/CD

on:
  push:
    branches: 
      - main

    paths:
      - "apps/sidebar/**"
      - ".github/workflows/test.yaml"

concurrency: ${{ github.ref_name }}

env:
  NODE_VERSION: 16.x
  WORKING_DIRECTORY: ./apps/sidebar

jobs:
  bump-and-package:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: write

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Update repository
        run: git pull

      - name: Use Node.js ${{ env.NODE_VERSION }}
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Cache Node_Modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ steps.setup-node.outputs['node-version'] }}-node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Setup Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Build scripts
        run: yarn build
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Bump version
        id: bump
        run: yarn bump
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Run auto-commit
        uses: stefanzweifel/git-auto-commit-action@v4.16.0
        with:
          commit_message: 'action:bump frontend version to ${{ steps.bump.outputs.version }}'

      - name: Save Auto Commit
        id: auto-commit
        run: echo "commit_id=$(git log --format="%H" -n 1)" >> $GITHUB_OUTPUT

      - name: Bump manifest version
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          sed -i s/{{version}}/${{ steps.bump.outputs.version }}/g ./manifest.json

      - name: Package app
        run: zip -r app.zip ./
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Upload package as artifact
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: '${{ env.WORKING_DIRECTORY }}/app.zip'
    
    outputs:
      version: ${{ steps.bump.outputs.version }}
      bump_commit_id: ${{ steps.auto-commit.commit_id }}
      artifact_name: app

  test:
    needs: [bump-and-package]
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: app

      - name: Unzip app
        run: unzip app.zip -d .