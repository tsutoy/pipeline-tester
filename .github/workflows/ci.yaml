name: CI

on:
  push:
    branches: 
      - main

env:
  FRONTEND_DIRECTORY: apps/sidebar
  BACKEND_DIRECTORY: apps/backend

jobs:
  check-changes:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Update repository
        run: git pull

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - '${{ env.BACKEND_DIRECTORY }}/**'
            frontend:
              - '${{ env.FRONTEND_DIRECTORY }}/**'
    
    outputs:
      backend_changed: ${{ steps.filter.outputs.backend }}
      frontend_changed: ${{ steps.filter.outputs.frontend }}
    
  frontend-ci:
    needs: [check-changes]
    if: needs.check-changes.outputs.frontend_changed == 'true'
    uses: ./.github/workflows/frontend.ci.yaml
    secrets: inherit

  backend-ci:
    needs: [check-changes]
    if: needs.check-changes.outputs.backend_changed == 'true'
    uses: ./.github/workflows/backend.ci.yaml
    secrets: inherit
  

  bump-repo:
    if: |
      always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
    needs: [frontend-ci, backend-ci]
    uses: ./.github/workflows/bump-version.yaml
    with:
      context_name: repo

  release:
    if: |
      always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
    needs: [frontend-ci, backend-ci, bump-repo]
    runs-on: ubuntu-latest

    timeout-minutes: 15

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.frontend-ci.outputs.artifact_name }}

      - name: Update release template
        env:
          old_version: ${{ needs.bump-repo.outputs.old_version }}
          new_version: ${{ needs.bump-repo.outputs.new_version }}
          frontend_output: Upgrade version from ${{ needs.frontend-ci.outputs.old_version }} to ${{ needs.frontend-ci.outputs.new_version }}
          backend_output: Upgrade version from ${{ needs.backend-ci.outputs.old_version }} to ${{ needs.backend-ci.outputs.new_version }}
        run: |
          sed -i "s/{{last_tag}}/${{ env.old_version }}/g" templates/release.md
          sed -i "s/{{current_tag}}/${{ env.new_version }}/g" templates/release.md
          sed -i "s/{{frontend_output}}/${{ needs.frontend-ci.outputs.new_version && env.frontend_output || 'Nothing Changes' }}/g" templates/release.md
          sed -i "s/{{backend_output}}/${{ needs.backend-ci.outputs.new_version && env.backend_output || 'Nothing Changes' }}/g" templates/release.md

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ needs.frontend-ci.outputs.artifact_name }}.zip"
          tag: ${{ needs.bump-repo.outputs.new_version }}
          bodyFile: templates/release.md